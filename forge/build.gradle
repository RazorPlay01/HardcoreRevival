buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: 'maven-publish'
apply plugin: "com.matthewprenger.cursegradle"

def buildNumber = System.getenv("GPR_BUILD_NUMBER") ? "+" + System.getenv("GPR_BUILD_NUMBER") : ""
version = mod_version + buildNumber

archivesBaseName = "${mod_id}-forge-${minecraft_version}"
group = mod_group

minecraft {
    mappings channel: 'official', version: minecraft_version

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "Client"

			arg "-mixin.config=${mod_id}.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
					source project(":shared").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "Server"

			arg "-mixin.config=${mod_id}.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
					source project(":shared").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName "Data"

            property 'forge.logging.console.level', 'debug'

			arg "-mixin.config=${mod_id}.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                "${mod_id}" {
                    source sourceSets.main
					source project(":shared").sourceSets.main
                }
            }
        }
    }
}

sourceSets {
	main {
        resources {
            srcDirs 'src/generated/resources'
        }
		ext.refMap = "${mod_id}.refmap.json"
	}
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
	compileOnly project(":shared")

    implementation fg.deobf("net.blay09.mods:balm:${balm_forge_version}")

    compileOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:5.0.38")
    testCompileOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:5.0.38")

    compileOnly fg.deobf("mezz.jei:jei-1.17.1:8.2.0.37:api")
//    runtimeOnly fg.deobf("mezz.jei:jei-1.17.1:8.2.0.37")

    compileOnly fg.deobf("curse.maven:mrcrayfishs-gun-mod-289479:3224957")

    implementation fg.deobf("curse.maven:timeless-and-classic-guns-tac-491264:4886929")

    implementation "org.jetbrains:annotations:22.0.0"
}

tasks.withType(JavaCompile) {
    source(project(":shared").sourceSets.main.allSource)
}

processResources {
    from project(":shared").sourceSets.main.resources
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
			artifactId = mod_id + "-forge"
			
            artifact jar
        }
    }
    repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/" + github_repo)
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
			}
		}
	}
}

curseforge {
	apiKey = project.findProperty("curseforge.api_key") ?: System.getenv("CF_API_KEY") ?: "none"
	project {
		id = curseforge_forge_project_id
		releaseType = curseforge_release_type
		changelogType = 'markdown'
		changelog = file('../changelog.md')
		addGameVersion minecraft_version
		addGameVersion 'Forge'

		relations {
			requiredLibrary 'balm'
		}
	}
}